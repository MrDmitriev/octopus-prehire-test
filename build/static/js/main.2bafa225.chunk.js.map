{"version":3,"sources":["constants/constants.ts","utils/currency.ts","api/currency.ts","components/Wrappers/AppWrapper.tsx","components/Header/Header.tsx","components/Wrappers/Content.tsx","components/Wrappers/FlexContainer.tsx","components/Wrappers/TableWrapper.tsx","components/Currencies/CurrencyDetail/CurrencyDetailTableBody.tsx","components/Currencies/CurrencyDetail/CurrencyDetailTableHeader.tsx","components/Currencies/CurrencyDetail/RatesChart.tsx","components/Currencies/CurrencyDetail/CurrencyDetail.tsx","components/Currencies/CurrencyList/CurrencyListTableRow.tsx","components/Currencies/CurrencyList/CurrencyListTableBody.tsx","components/Currencies/CurrencyList/CurrencyListTableHeader.tsx","components/Currencies/CurrencyList/CurrencyList.tsx","components/Currencies/CurrencySearch/CurrencySearch.tsx","components/Helpers/ErrorNitification.tsx","components/Currencies/Currencies.tsx","App.tsx","index.tsx"],"names":["CURRENCY_LIST","process","MONTHS","ALPHABET","removeDiacritics","diacritics","remove","getAverageRate","rates","length","reduce","prevValue","currentValue","getCountryNameByCode","code","currencies","currency","find","country","sortCurrenciesAlphaBetically","items","propName","sort","a","b","localeCompare","getCurrencyList","options","headers","axios","get","result","data","currenciesMap","getCurrenciesMap","console","log","getCurrencyDetail","undefined","url","toLowerCase","average","Error","i","key","Object","assign","firstLetterCurrencyCode","firstLetterCurrencyCountry","hasOwnProperty","AppWrapper","children","className","Header","Content","FlexContainer","TableWrapper","CurrencyDetailTableBody","currencyDetail","style","minWidth","toFixed","CurrencyDetailTableHeader","RatesChart","input","today","Date","startMonthIndex","getMonth","month","dateSuffix","getFullYear","date","slice","rate","Math","round","push","name","value","getChartData","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","vertical","horizontal","XAxis","dataKey","stroke","YAxis","domain","Tooltip","Line","type","activeDot","r","CurrencyDetail","hidden","CurrencyListTableRow","handleCurrencySelect","navigate","useNavigate","onClick","CurrencyListTableBody","map","CurrencyListTableHeader","CurrencyList","sortedByCountryName","CurrencySearch","handleCurrencySearch","useState","searchQuery","setSearchQuery","action","htmlFor","placeholder","onChange","e","currentTarget","ErrorNitification","Currencies","search","setSearch","selectedCurrency","setSelectedCurrency","setCurencyDetail","error","setError","useEffect","then","catch","useCallback","currencyCode","query","filteredCurrencies","filter","startsWith","filterCurrencies","App","useQuery","isLoading","queryClient","QueryClient","ReactDOM","render","StrictMode","client","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.2bafa225.chunk.js","sourcesContent":["// RATES\r\nexport const AVERAGE_RATE_DECIMALS = 2;\r\n\r\n// WARNINGS\r\nexport const NO_DATA_LOADED_WARNING = 'We have not got any data from the bank';\r\n\r\n// ENDPOINTS\r\nexport const CURRENCY_LIST = `${process.env.PUBLIC_URL}/data/currencies.json`;\r\n\r\n// TIME\r\nexport const MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\nexport const CURRENT_CENTURY_YEARS = 2000;\r\n\r\n// ALPHABET\r\nexport const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\r\n\r\n","import diacritics from 'diacritics';\r\n\r\n\r\nimport { CURRENT_CENTURY_YEARS, MONTHS } from \"../constants/constants\";\r\nimport { ChartRate } from \"../types/ChartRate\";\r\nimport { CurrenciesMap } from \"../types/CurrenciesMap\";\r\nimport { Currency } from \"../types/Currency\";\r\n\r\nconst removeDiacritics = diacritics.remove;\r\n\r\nexport const roundNumberTwoDecimals = (input: number): number => {\r\n\treturn Math.round(input * 100) / 100;\r\n}\r\n\r\nexport const getAverageRate = (rates: number[]): number => {\r\n\tif (!rates.length) {\r\n\t\treturn 0;\r\n\t}\r\n\treturn rates.reduce((\r\n\t\tprevValue: number,\r\n\t\tcurrentValue: number\r\n\t\t) => prevValue + currentValue, 0) / rates.length;\r\n}\r\n\r\n/**\r\n * get a list of rates for last 12 months\r\n * result is a list of Objects, where every Object includes name of month and its rate\r\n * \r\n */\r\nexport const getChartData = (rates: number[]): ChartRate[] => {\r\n\tconst result = [];\r\n\tconst today = new Date();\r\n\tlet startMonthIndex = today.getMonth();\r\n\r\n\tfor (let i=0; i<rates.length; i++) {\r\n\t\tconst month = MONTHS[startMonthIndex % 12];\r\n\r\n\t\tconst dateSuffix = (i === rates.length - 1) ? today.getFullYear() % CURRENT_CENTURY_YEARS : '';\r\n\t\tconst date = month.slice(0, 3) + dateSuffix;\r\n\t\tconst rate = roundNumberTwoDecimals(rates[i]);\r\n\t\tresult.push({name: date, value: rate});\r\n\t\tstartMonthIndex++;\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nexport const getCountryNameByCode = (code: string, currencies: Currency[]) => {\r\n\tconst currency: Currency | undefined = currencies.find((currency: Currency) => currency.code === code);\r\n\tconst country: string = currency ? currency.country : '';\r\n\treturn country;\r\n}\r\n\r\nexport const sortCurrenciesAlphaBetically = (items: Currency[], propName: string) => {\r\n\treturn items.sort((a: Currency, b: Currency) => a[propName].localeCompare(b[propName]))\r\n}\r\nexport const filterCurrencies = (search: string, currenciesMap: CurrenciesMap) => {\r\n\tconst firstLetterSearch: string = search[0];\r\n\tconst collection = currenciesMap[firstLetterSearch];\r\n\tconst result = collection.filter((currency) => {\r\n\t\tconst country = removeDiacritics(currency.country).toLowerCase();\r\n\t\tconst { code } = currency;\r\n\r\n\t\treturn country.startsWith(search) || code.toLowerCase().startsWith(search);\r\n\t});\r\n\r\n\treturn result;\r\n}","import axios from \"axios\";\r\nimport diacritics from 'diacritics';\r\n\r\nimport { ALPHABET, CURRENCY_LIST } from \"../constants/constants\";\r\nimport { CurrenciesMap } from \"../types/CurrenciesMap\";\r\nimport { Currency } from \"../types/Currency\";\r\nimport { getAverageRate, getCountryNameByCode, sortCurrenciesAlphaBetically } from \"../utils/currency\";\r\n\r\nconst removeDiacritics = diacritics.remove;\r\n\r\nexport const getCurrencyList = async () => {\r\n\ttry {\r\n\t\tconst options = {\r\n      headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n       }\r\n    };\r\n\t\tconst result = await axios.get(CURRENCY_LIST, options);\r\n\t\tconst currencies = sortCurrenciesAlphaBetically(result.data.currencies, 'country') || [];\r\n\t\tconst currenciesMap = getCurrenciesMap(result.data.currencies) || {};\r\n\t\treturn {currencies, currenciesMap};\r\n\t} catch (error) {\r\n\t\tconsole.log('An error occured, #api/getCurrencyList:', error);\r\n\t}\r\n}\r\n\r\nexport const getCurrencyDetail = async (code: string, currencies: Currency[]) => {\r\n\tif (!code || !currencies) {\r\n\t\treturn undefined;\r\n\t}\r\n\ttry {\r\n\t\tconst url = `${process.env.PUBLIC_URL}/data/${code.toLowerCase()}.json`\r\n\t\tconst options = {\r\n      headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n       }\r\n    };\r\n\r\n\t\tconst result = await axios.get(url, options);\r\n\r\n\t\tconst { data = {} } = result;\r\n\t\tconst { rates = [] } = data;\r\n\r\n\t\tconst average: number = getAverageRate(rates);\r\n\t\tconst country: string = getCountryNameByCode(code, currencies);\r\n\r\n\r\n\t\treturn {code, country, rates, average};\r\n\t} catch (error) {\r\n\t\tconsole.log('An error occured, #api/getCurrencyDetail:', error);\r\n\t\tthrow new Error();\r\n\t}\r\n}\r\n\r\nexport const getCurrenciesMap = (currencies: Currency[]) => {\r\n\tconst currenciesMap: CurrenciesMap = {};\r\n\tfor (let i=0; i<ALPHABET.length; i++) {\r\n\t\tconst key = ALPHABET[i];\r\n\t\tconst value: Currency[] = [];\r\n\t\tObject.assign(currenciesMap, {[key]: value})\r\n\t}\r\n\r\n\r\n\tfor (let i=0; i<currencies.length; i++) {\r\n\t\tconst currency = currencies[i];\r\n\r\n\t\tconst firstLetterCurrencyCode = currency.code[0].toLowerCase();\r\n\t\tconst firstLetterCurrencyCountry = removeDiacritics(currency.country)[0].toLowerCase();\r\n\r\n\t\tif (currenciesMap.hasOwnProperty(firstLetterCurrencyCode)) {\r\n\t\t\tcurrenciesMap[firstLetterCurrencyCode] = [...currenciesMap[firstLetterCurrencyCode], currency];\r\n\t\t}\r\n\r\n\t\tif (currenciesMap.hasOwnProperty(firstLetterCurrencyCountry)\r\n\t\t&& firstLetterCurrencyCode !== firstLetterCurrencyCountry) {\r\n\t\t\tcurrenciesMap[firstLetterCurrencyCountry] = [...currenciesMap[firstLetterCurrencyCountry], currency];\r\n\t\t}\r\n\t}\r\n\r\n\treturn currenciesMap;\r\n}","import React from 'react'\r\n\r\ntype Props = {\r\n\tchildren: React.ReactNode\r\n}\r\n\r\nconst AppWrapper: React.FC<Props> = ({children}: Props) => {\r\n\treturn (\r\n\t\t<div className='container'>{children}</div>\r\n\t)\r\n}\r\n\r\nexport default AppWrapper","import React from 'react'\r\n\r\nconst Header: React.FC = () => {\r\n\treturn (\r\n\t\t<header className='header'>\r\n\t\t\t<h1 className='header__title'>Currency rates</h1>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\ntype Props = {\r\n\tchildren: React.ReactNode\r\n}\r\n\r\nconst Content: React.FC<Props> = ({children}: Props) => {\r\n\treturn (\r\n\t\t<main className='content'>{children}</main>\r\n\t)\r\n}\r\n\r\nexport default Content","import React from 'react'\r\n\r\ntype Props = {\r\n\tchildren: React.ReactNode;\r\n\tclassName: string;\r\n}\r\nconst FlexContainer:React.FC<Props> = ({children, className = ''}: Props) => {\r\n\treturn (\r\n\t\t<div className={`${className} flex-container`}>{children}</div>\r\n\t)\r\n}\r\n\r\nexport default FlexContainer","import React from 'react'\r\n\r\ntype Props = {\r\n\tchildren: React.ReactNode;\r\n\tclassName: string\r\n}\r\n\r\nconst TableWrapper: React.FC<Props> = ({children, className = ''}: Props) => {\r\n\treturn (\r\n\t\t<div className={`table-container ${className}`}>{children}</div>\r\n\t)\r\n}\r\n\r\nexport default TableWrapper","import { AVERAGE_RATE_DECIMALS } from \"../../../constants/constants\";\r\nimport { CurrencyDetail } from \"../../../types/CurrencyDetail\";\r\n\r\ntype Props = {\r\n\tcurrencyDetail: CurrencyDetail\r\n}\r\n\r\nconst CurrencyDetailTableBody: React.FC<Props> = ({currencyDetail}: Props) => {\r\n\tconst { code = '', country = '', average = 0} = currencyDetail;\r\n\treturn (\r\n\t\t<tbody className='table__body'>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>{code}</td>\r\n\t\t\t\t<td style={{minWidth: '19vw'}}>{country}</td>\r\n\t\t\t\t<td>{average.toFixed(AVERAGE_RATE_DECIMALS)} CZK</td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t)\r\n}\r\n\r\nexport default CurrencyDetailTableBody","import React from 'react'\r\n\r\nconst CurrencyDetailTableHeader: React.FC = () => {\r\n\treturn (\r\n\t\t<thead className='table__header'>\r\n\t\t\t<tr>\r\n\t\t\t\t<th>Code</th>\r\n\t\t\t\t<th>Country</th>\r\n\t\t\t\t<th>Average rate</th>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t)\r\n}\r\n\r\nexport default CurrencyDetailTableHeader","import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport { getChartData } from '../../../utils/currency';\r\nimport { ChartRate } from '../../../types/ChartRate';\r\n\r\n\r\ntype Props = {\r\n\trates: number[]\r\n}\r\nconst RatesChart: React.FC<Props> = ({rates}: Props) => {\r\n\tconst data: ChartRate[] = getChartData(rates);\r\n  return (\r\n\t\t<ResponsiveContainer width=\"100%\" height=\"75%\">\r\n\t\t\t<LineChart\r\n\t\t\t\twidth={500}\r\n\t\t\t\theight={250}\r\n\t\t\t\tdata={data}\r\n\t\t\t\tmargin={{\r\n\t\t\t\t\ttop: 55,\r\n\t\t\t\t\tright: 20,\r\n\t\t\t\t\tleft: 20,\r\n\t\t\t\t\tbottom: 5,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" vertical={true} horizontal={false} />\r\n\t\t\t\t<XAxis dataKey=\"name\" stroke='#cfb1c5' />\r\n\t\t\t\t<YAxis stroke='#cfb1c5' domain={['dataMin', 'dataMax']} />\r\n\t\t\t\t<Tooltip />\r\n\t\t\t\t<Line type=\"monotone\" dataKey=\"value\" stroke=\"#1e238f\" activeDot={{ r: 8 }} />\r\n\t\t\t</LineChart>\r\n\t\t</ResponsiveContainer>\r\n\t);\r\n}\r\n\r\nexport default RatesChart;","import { CurrencyDetail as CurrencyDetailType } from '../../../types/CurrencyDetail';\r\nimport TableWrapper from '../../Wrappers/TableWrapper';\r\nimport CurrencyDetailTableBody from './CurrencyDetailTableBody';\r\nimport CurrencyDetailTableHeader from './CurrencyDetailTableHeader';\r\nimport RatesChart from './RatesChart';\r\n\r\ntype Props = {\r\n\tcurrencyDetail: CurrencyDetailType,\r\n\thidden: boolean\r\n}\r\n\r\nconst CurrencyDetail: React.FC<Props> = ({ currencyDetail, hidden }: Props) => {\r\n\treturn (\r\n\t\t<TableWrapper className={`currency-detail ${hidden ? 'visually-hidden' : ''}`}>\r\n\t\t\t<table className='currency-detal__table table'>\r\n\t\t\t\t<CurrencyDetailTableHeader />\r\n\t\t\t\t<CurrencyDetailTableBody currencyDetail={currencyDetail} />\r\n\t\t\t</table>\r\n\t\t\t<RatesChart rates={currencyDetail.rates} />\r\n\t\t</TableWrapper>\r\n\t)\r\n}\r\n\r\nexport default CurrencyDetail;\r\n","import { useNavigate  } from \"react-router-dom\";\r\n\r\nimport { Currency } from \"../../../types/Currency\";\r\n\r\ntype Props = {\r\n\tcurrency: Currency;\r\n\thandleCurrencySelect: (currencyCode: string) => void;\r\n}\r\n\r\nconst CurrencyListTableRow: React.FC<Props> = ({ currency, handleCurrencySelect }: Props) => {\r\n\tlet navigate = useNavigate ();\r\n\tconst handleRowClick = () => {\r\n\t\thandleCurrencySelect(currency.code)\r\n\t\tnavigate(`/currency/detail/${currency.code}`)\r\n\t}\r\n\treturn (\r\n\t\t<tr onClick={handleRowClick}>\r\n\t\t\t<td >{currency.country}</td>\r\n\t\t\t<td >{currency.code}</td>\r\n\t\t</tr>\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default CurrencyListTableRow;","import { Currency } from '../../../types/Currency';\r\nimport CurrencyListTableRow from './CurrencyListTableRow';\r\n\r\ntype Props = {\r\n\tcurrencies: Currency[];\r\n\thandleCurrencySelect: (currencyCode: string) => void;\r\n}\r\n\r\nconst CurrencyListTableBody: React.FC<Props> = ({currencies = [], handleCurrencySelect}: Props) => {\r\n\treturn (\r\n\t\t<tbody className='table__body'>\r\n\t\t\t{currencies.map(\r\n\t\t\t\t(currency: Currency)=> {\r\n\t\t\t\t\treturn <CurrencyListTableRow\r\n\t\t\t\t\t\t\t\t\t\tkey={currency.code}\r\n\t\t\t\t\t\t\t\t\t\thandleCurrencySelect={handleCurrencySelect}\r\n\t\t\t\t\t\t\t\t\t\tcurrency={currency}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t)}\r\n\t\t</tbody>\r\n\t);\r\n};\r\n\r\nexport default CurrencyListTableBody;","const CurrencyListTableHeader: React.FC = () => {\r\n\treturn (\r\n\t\t<thead className='table__header'>\r\n\t\t\t<tr>\r\n\t\t\t\t<th key='countryName' >Country</th>\r\n\t\t\t\t<th key='currencyCode' >Code</th>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t);\r\n};\r\n\r\nexport default CurrencyListTableHeader;","import { Currency } from '../../../types/Currency';\r\nimport { sortCurrenciesAlphaBetically } from '../../../utils/currency';\r\nimport TableWrapper from '../../Wrappers/TableWrapper';\r\nimport CurrencyListTableBody from './CurrencyListTableBody';\r\nimport CurrencyListTableHeader from './CurrencyListTableHeader';\r\n\r\ntype Props = {\r\n\tsearch: string;\r\n\tcurrencies: Currency[];\r\n\thandleCurrencySelect: (currencyCode: string) => void;\r\n}\r\nexport const CurrencyList: React.FC<Props> = ({currencies, handleCurrencySelect}: Props) => {\r\n\tconst sortedByCountryName = sortCurrenciesAlphaBetically(currencies, 'country');\r\n\treturn (\r\n<>\r\n\t\t<TableWrapper className='currency-list'>\r\n\t\t\t<table className='currencies-list__table table'>\r\n\t\t\t\t<CurrencyListTableHeader />\r\n\t\t\t\t<CurrencyListTableBody currencies={sortedByCountryName} handleCurrencySelect={handleCurrencySelect} />\r\n\t\t\t</table>\r\n\t\t</TableWrapper>\r\n</>\r\n\t);\r\n}\r\n\r\nexport default CurrencyList;","import React, { useState } from 'react'\r\n\r\ntype Props = {\r\n\thandleCurrencySearch: (value: string) => void\r\n}\r\n\r\nconst CurrencySearch: React.FC<Props> = ({handleCurrencySearch}: Props) => {\r\n\tconst [searchQuery, setSearchQuery] = useState('');\r\n\tconst handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst { value = '' } = e.currentTarget;\r\n\t\tsetSearchQuery(value)\r\n\t\thandleCurrencySearch(value);\r\n\t}\r\n\treturn (\r\n\t\t<div className='currency-search'>\r\n\t\t\t<form action=\"\">\r\n\t\t\t\t<label htmlFor=\"currency-search\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tvalue={searchQuery}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname='currency-search'\r\n\t\t\t\t\t\tplaceholder='Search currency'\r\n\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</label>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CurrencySearch","import React from 'react'\r\n\r\nconst ErrorNitification: React.FC = () => {\r\n\treturn (\r\n\t\t<div>Oops, something went wrong. Try open another currency detail</div>\r\n\t)\r\n}\r\n\r\nexport default ErrorNitification","import { useCallback, useEffect, useState } from 'react'\r\nimport diacritics from 'diacritics';\r\n\r\nimport { getCurrencyDetail } from '../../api/currency';\r\nimport { CurrenciesMap } from '../../types/CurrenciesMap';\r\nimport { Currency } from '../../types/Currency';\r\nimport { CurrencyDetail as CurrencyDetailType } from '../../types/CurrencyDetail';\r\nimport { filterCurrencies } from '../../utils/currency';\r\nimport FlexContainer from '../Wrappers/FlexContainer';\r\nimport CurrencyDetail from './CurrencyDetail/CurrencyDetail'\r\nimport CurrencyList from './CurrencyList/CurrencyList'\r\nimport CurrencySearch from './CurrencySearch/CurrencySearch';\r\nimport ErrorNitification from '../Helpers/ErrorNitification';\r\n\r\nconst removeDiacritics = diacritics.remove;\r\n\r\ntype Props = {\r\n\tcurrencies: Currency[],\r\n\tcurrenciesMap: CurrenciesMap\r\n}\r\nconst Currencies: React.FC<Props> = ({currencies = [], currenciesMap = {}}: Props) => {\r\n\tconst [search, setSearch] = useState('');\r\n\tconst [selectedCurrency, setSelectedCurrency] = useState('');\r\n\tconst [currencyDetail, setCurencyDetail] = useState({country: '', code: '', rates: [0], average: 0});\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetCurrencyDetail(selectedCurrency, currencies)\r\n\t\t\t.then((data: CurrencyDetailType | undefined) => data && setCurencyDetail(data))\r\n\t\t\t.catch(() => setError(true));\r\n\t}, [selectedCurrency, currencies]);\r\n\r\n\t\r\n\tconst handleCurrencySelect = useCallback(\r\n\t\t(currencyCode: string) => {\r\n\t\t\tsetSelectedCurrency(currencyCode);\r\n\t\t\tsetError(false);\r\n\t\t},\r\n\t\t[],\r\n\t)\r\n\t\r\n\r\n\tconst handleCurrencySearch = useCallback(\r\n\t\t(query = '') => {\r\n\t\t\tsetSearch(removeDiacritics(query).toLowerCase());\r\n\t\t},\r\n\t\t[],\r\n\t)\r\n\t\r\n\tconst filteredCurrencies = search ? filterCurrencies(search, currenciesMap) : currencies;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CurrencySearch handleCurrencySearch={handleCurrencySearch} />\r\n\t\t\t<FlexContainer className='currencies'>\r\n\t\t\t\t<CurrencyList\r\n\t\t\t\t\tsearch={search}\r\n\t\t\t\t\tcurrencies={filteredCurrencies}\r\n\t\t\t\t\thandleCurrencySelect={handleCurrencySelect}\r\n\t\t\t\t/>\r\n\t\t\t\t{!error\r\n\t\t\t\t? <CurrencyDetail hidden={!selectedCurrency} currencyDetail={currencyDetail} />\r\n\t\t\t\t: <ErrorNitification />\r\n\t\t\t\t}\r\n\t\t\t</FlexContainer>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Currencies","import { useQuery } from 'react-query'\r\n\r\nimport { getCurrencyList } from './api/currency';\r\nimport AppWrapper from './components/Wrappers/AppWrapper';\r\nimport Header from './components/Header/Header';\r\nimport Content from './components/Wrappers/Content';\r\nimport Currencies from './components/Currencies/Currencies';\r\n\r\nconst App: React.FC = () => {\r\n\tconst { isLoading, data } = useQuery('currencyList', getCurrencyList);\r\n\t\r\n\tif (isLoading) {\r\n\t\treturn <span>Loading...</span>\r\n\t}\r\n\r\n  return (\r\n    <AppWrapper>\r\n\t\t\t<Header />\r\n\t\t\t<Content>\r\n\t\t\t\t{data && <Currencies currencies={data.currencies} currenciesMap={data.currenciesMap}/>}\r\n\t\t\t</Content>\r\n    </AppWrapper>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport { QueryClientProvider, QueryClient } from 'react-query';\r\nimport './styles/index.scss';\r\n\r\nimport App from './App';\r\n\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<QueryClientProvider client={queryClient}>\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t<Route path=\"/\" element={<App />} />\r\n\t\t\t\t\t<Route path=\"/currency/detail/:currency\" element={<App />} />\r\n\t\t\t\t</Routes>\r\n\t\t\t</BrowserRouter>\r\n\t\t</QueryClientProvider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}